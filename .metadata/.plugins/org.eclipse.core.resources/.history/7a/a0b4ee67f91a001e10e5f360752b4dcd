package com.cuponservice.service;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class WebSecurityConfig {

	@Bean
	BCryptPasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}// so this encoder will be use when the request coming to encode the password
		// and compare with what we have in the databse

	@Bean // this method receive httpSecurity object
	SecurityFilterChain filterChain(HttpSecurity http) throws Exception {

//        http.httpBasic();// authentication method
		http.formLogin();
		http.authorizeHttpRequests()// authorize request
        .requestMatchers(HttpMethod.GET, "/couponapi/coupons/{code:^[A-Z]*$}","/")
        .hasAnyRole("USER", "ADMIN")
//        .requestMatchers(HttpMethod.GET, "/showCreateCoupon","/createCoupon","createResponse","/showGetCoupon","/getCoupon")
//        .hasAnyRole("USER","ADMIN")
        .requestMatchers(HttpMethod.POST, "/couponapi/coupons")
        .hasRole("ADMIN")
//        .requestMatchers(HttpMethod.POST, "/getCoupon")
//        .hasAnyRole("USER","ADMIN")
        .and()
        .csrf()
        .disable();
		return http.build();

	}
}